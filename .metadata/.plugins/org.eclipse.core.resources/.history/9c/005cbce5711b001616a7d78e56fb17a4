package fr.polytech.model;

import java.util.ArrayList;

public class Grille {
	private ArrayList<Tuile> grille;
	private int taille_x = 4;
	private int taille_y = 4;
	
	
	/**
	 * @return the grille
	 */
	public ArrayList<Tuile> getGrille() {
		return grille;
	}

	/**
	 * @param grille the grille to set
	 */
	public void setGrille(ArrayList<Tuile> grille) {
		this.grille = grille;
	}

	/**
	 * @return the taille_x
	 */
	public int getTaille_x() {
		return taille_x;
	}

	/**
	 * @param taille_x the taille_x to set
	 */
	public void setTaille_x(int taille_x) {
		this.taille_x = taille_x;
	}

	/**
	 * @return the taille_y
	 */
	public int getTaille_y() {
		return taille_y;
	}

	/**
	 * @param taille_y the taille_y to set
	 */
	public void setTaille_y(int taille_y) {
		this.taille_y = taille_y;
	}

	public Grille(){
		grille = new ArrayList<Tuile>();
	}
	
	public void generation(){
		int nb_spawn = taille_x*taille_y - (taille_x+ taille_y);
		for (int i = 0; i<taille_x*taille_y; i++){
			grille.add(new Tuile());
		}
	}
	public boolean deplacer(Grille g, int x, int y){
		/*si on est sur un bord*/
		if((x < 0 || x >= this.getTaille_x()) || (y < 0 || y >= this.getTaille_y())){
			return false;
		}
		for(Tuile t : this.getGrille()){
			/*s'il y a déjà une tuile à cette position x,y*/
			if((t.getPos_x() == x) && (t.getPos_y() == y)){
				t.setPos_x(x);
				setPos_y(y);
				/*si les valeurs des tuiles sont identiques, on les additionne,
				 * puis on supprime l'ancienne de l'arraylist de la grille*/
				if(t.valeur == this.valeur){
					this.valeur += this.valeur;
					g.getGrille().remove(t);
				}else{
					return false;
				}
				return true;
			}
		}
		return true;		
	}	
	
	public void affichagetemporaire(){
		int i = 0;
		for(Tuile t : grille){
			
			if (i%taille_x == 0){
				System.out.println(" ");
			}
			System.out.print(t.getValeur()+" ");
			i++;
	}
	}
}
